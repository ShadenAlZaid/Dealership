@page "/"
@using DealershipLibrary.Vehicle.Cars
@using DealershipLibrary
@using System.ComponentModel.DataAnnotations;
@using Microsoft.Extensions.Logging
@inject ILogger<Car> Logger

<h3>Shaden's Dealership</h3> 
<div>
     <EditForm Model="@type" OnValidSubmit="@ValidSubmit">
        <DataAnnotationsValidator/>

            <select id="vehicleType" @onchange="(e)=>SelectVehicle(e.Value.ToString())">
                <option value="">Choose Vehicle</option>

                @foreach (var item in vehicleTypesList)
                {
                    <option value="@item">@item</option>
                }
            </select>

            @if (VehicleType == VehicleTypesEnum.Car)
            {
                <CarComponent OnAdd="@vehicleAdded"></CarComponent> //Car component
            }  
            else if(VehicleType == VehicleTypesEnum.Motorcycle)
            {
                <MotorcycleComponent OnAdd="vehicleAdded"></MotorcycleComponent> //Motorcycle component 
            }
            else if(VehicleType == VehicleTypesEnum.Truck)
            {
            <TruckComponent OnAdd="vehicleAdded"></TruckComponent> //Truck component        
            } 

            @foreach (var v in VehiclesList)
            {
                <p>@v.VehicleColor.ToString() @v.VehicleModel.ToString()</p>
            }

    <ValidationMessage For="@(()=>type)" ></ValidationMessage>
    </EditForm>
</div>


@code
{
    List<string> vehicleTypesList = Extensions.GetEnumItems(typeof(VehicleTypesEnum));
    public List<IVehicle> VehiclesList { get; set; } = new List<IVehicle>();

    VehicleType type = new VehicleType(null);

    void SelectVehicle(string value)
    {
        this.type.SetVehicleType(value);
    }

    void vehicleAdded(IVehicle vehicle)
    {
        this.VehiclesList.Add(vehicle);
    }

    void ValidSubmit()
    {
        Logger.LogInformation("ValidSubmit called");
    }
}