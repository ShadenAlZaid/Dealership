@page "/"
@using Dealership.Data
@using DealershipLibrary.Vehicle.Cars
@using DealershipLibrary.Vehicle.Motorcycles
@using DealershipLibrary.Vehicle.Trucks
@using DealershipLibrary.Vehicle
@using DealershipLibrary
@using System.ComponentModel.DataAnnotations
@using Microsoft.Extensions.Logging
@inject ILogger<Car> Logger

<body>
    <h4>Shaden's Dealership</h4>
    <div>
        <div>
            <select id="vehicleType" @onchange="(e)=>SelectVehicle(e.Value.ToString())">
                <option value="">Choose Vehicle</option>

                @foreach (var item in vehicleTypesList)
                {
                    <option value="@item">@item</option>
                }
            </select>
        </div>
        <div>
            @switch (type.Name)
            {
                case "Car":
                    @if (ShoppingCart.Count(v => v.VehicleType.Name == VehicleTypesEnum.Car.ToString()) < 3)
                    {
                        <CarComponent OnAdd="@vehicleAdded"></CarComponent>
                        //Car component
                    }
                    else
                    {
                        <span>Max amount of Cars!</span>
                    }
                    break;

                case "Motorcycle":
                    if (ShoppingCart.Count(v => v.VehicleType.Name == VehicleTypesEnum.Motorcycle.ToString()) < 3)
                    {
                        <MotorcycleComponent OnAdd="@vehicleAdded"></MotorcycleComponent>
                        //Motorcycle component
                    }
                    else
                    {
                        <span>Max amount of Motorcycle!</span>
                    }
                    break;

                case "Truck":
                    if (ShoppingCart.Count(v => v.VehicleType.Name == VehicleTypesEnum.Truck.ToString()) < 3)
                    {
                        <TruckComponent OnAdd="vehicleAdded"></TruckComponent>
                        //Truck component
                    }
                    else
                    {
                        <span>Max amount of Truck!</span>
                    }
                    break;
            }

        </div>
        <div>
            <br />
            <h6><b>Shopping Cart</b></h6>
            @foreach (var v in ShoppingCart)
            {
                <ul>
                    @v.ColorName.ToString() @v.ModelName.ToString()
                    <button @onclick="@(() => Remove(v))">🗙</button>
                </ul>
            }
            @if (ShoppingCart.Count != 0)
            {
                <button @onclick="@(() => CheckOut(ShoppingCart))">Checkout</button>
                <br />
                <span>  @purchaseMsg</span>
            }
        </div>
    </div>
</body>

@code
{
    VehicleService vehicleService;
    private static DealershipContext _context = new DealershipContext();

    List<string> vehicleTypesList = Extensions.GetEnumItems(typeof(VehicleTypesEnum));
    
    public List<VehicleDTO> ShoppingCart { get; set; } = new List<VehicleDTO>();

    VehicleType type = new VehicleType(null);

    string purchaseMsg;

    void SelectVehicle(string value)
    {
        this.type = new VehicleType(value);
    }

    void vehicleAdded(VehicleDTO vehicle)
    {
        vehicle.VehicleType = type;
        this.ShoppingCart.Add(vehicle);
    }

    void Remove(VehicleDTO v)
    {
        ShoppingCart.Remove(v);
    }

    void CheckOut(List<VehicleDTO> ShoppingCart)
    {
        var result = vehicleService.CheckOut(ShoppingCart);

        purchaseMsg = result;
    }

    void ValidSubmit()
    {
        Logger.LogInformation("ValidSubmit called");
    }
}