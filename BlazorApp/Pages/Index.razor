@page "/"
@using DealershipLibrary.Vehicle.Cars
@using DealershipLibrary
@using System.ComponentModel.DataAnnotations;
@using Microsoft.Extensions.Logging
@inject ILogger<Car> Logger

<body>
    <h4>Shaden's Dealership</h4> 
    <div>
        <div>
            <select id="vehicleType" @onchange="(e)=>SelectVehicle(e.Value.ToString())">
                <option value="">Choose Vehicle</option>

                @foreach (var item in vehicleTypesList)
                {
                    <option value="@item">@item</option>
                }
            </select>
        </div>
        <div>
            @if (type.Name == VehicleTypesEnum.Car.ToString()&& 
            ShoppingCart.Count(v=>v.VehicleType.Name==VehicleTypesEnum.Car.ToString()) <= 3)
            {
                <CarComponent OnAdd="@vehicleAdded"></CarComponent> //Car component
            }  
            else if(type.Name == VehicleTypesEnum.Motorcycle.ToString())
            {
                <MotorcycleComponent OnAdd="vehicleAdded"></MotorcycleComponent> //Motorcycle component 
            }
            else if(type.Name == VehicleTypesEnum.Truck.ToString())
            {
                <TruckComponent OnAdd="vehicleAdded"></TruckComponent> //Truck component        
            } 
        </div>
        <div>
            <br/>
            <h6><b>Shopping Cart</b></h6>
            @foreach (var v in ShoppingCart)
            {
                <ul>@v.VehicleColor.Name.ToString() @v.VehicleModel.Name.ToString()
                <button @onclick="@(() => Remove(v))">🗙</button></ul>
                }
            @if (ShoppingCart.Count != 0)
            {
                <button @onclick="@(() => CheckOut())">Checkout</button>
                <br/>
                <span>  @purchaseMsg</span>
            }
        </div>   
    </div>
</body>

@code
{
    //[Parameter]
    //public EventCallback<IVehicle> OnRemove {get; set;}

    //[Parameter]
    //public EventCallback<IVehicle> OnCheckOut {get; set;}

    List<string> vehicleTypesList = Extensions.GetEnumItems(typeof(VehicleTypesEnum));
    public List<IVehicle> ShoppingCart { get; set; } = new List<IVehicle>();

    VehicleType type = new VehicleType(null);


    string purchaseMsg;

    void SelectVehicle(string value)
    {
        this.type= new VehicleType(value);
    }

    void vehicleAdded(IVehicle vehicle)
    {
        vehicle.VehicleType = type;
        this.ShoppingCart.Add(vehicle);
    }

    void Remove(IVehicle v)
    {
       ShoppingCart.Remove(v);
    }

    void CheckOut()
    {
        purchaseMsg = "Purchase Successful!";
    }

    void ValidSubmit()
    {
        Logger.LogInformation("ValidSubmit called");
    }
}