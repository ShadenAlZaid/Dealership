@page "/truck"
@using DealershipLibrary.Vehicle.Trucks
@using DealershipLibrary.Vehicle
@using DealershipLibrary
@using System.Collections.Generic
@using System.ComponentModel.DataAnnotations;
@using Microsoft.Extensions.Logging
@inject ILogger<Truck> Logger

<div>
    <h5>Truck</h5>

    <EditForm Model="@truck" OnValidSubmit="@ValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <select @onchange="(e)=>SelectColor(e.Value.ToString())">
            <option value="">Choose Color</option>

            @foreach (var item in truckColorsList)
            {
                <option value="@item.">@item</option>
            }
        </select>

        <select @onchange="(e)=>SelectModel(e.Value.ToString())">
            <option value="">Choose Model</option>

            @foreach (var item in truckModelsList)
            {
                <option value="@item">@item</option>
            }
        </select>

        <button type="submit">Add</button>

        <span>   @msg</span>

        @*<ValidationMessage For="@(()=>truck.VehicleModel)" ></ValidationMessage>*@
    </EditForm>
</div>

@code {
    [Inject]
    VehicleService vehicleService { get; set; }

    [Parameter]
    public EventCallback<VehicleDTO> OnAdd { get; set; }

    List<LookupDTO> truckColorsList;
    List<LookupDTO> truckModelsList;

    private VehicleDTO truck = new VehicleDTO(null, null);
    string msg;

    protected override void OnInitialized()
    {
        this.truckColorsList = this.vehicleService.GetColors();
        this.truckModelsList = this.vehicleService.GetModels();
    }

    void SelectColor(string value)
    {
        this.truck.SetColor(value);
    }

    void SelectModel(string value)
    {
        this.truck.SetModel(value);
    }

    void ValidSubmit()
    {
        var newTruck = new VehicleDTO(null, null);
        newTruck.VehicleTypeId = (int)VehicleTypesEnum.Truck;
        newTruck.Clone(truck);

        //reset car to null
        truck = new VehicleDTO();
        OnAdd.InvokeAsync(newTruck);
        msg = "Truck Added!";
        Logger.LogInformation("ValidSubmit called");
    }
}
