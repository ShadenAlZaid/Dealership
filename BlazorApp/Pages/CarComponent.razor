@page "/car"
@using DealershipLibrary.Vehicle.Cars
@using DealershipLibrary
@using System.Collections.Generic
@using System.ComponentModel.DataAnnotations;
@using Microsoft.Extensions.Logging
@inject ILogger<Car> Logger

<div>
    <h3>Car</h3>

    <EditForm Model = "@c" OnValidSubmit="@ValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />   
    

    <select @onchange="(e)=>SelectColor(e.Value.ToString())">
        <option value="">Choose Color</option>

        @foreach (var item in carColorsList)
        {
            <option value="@item">@item</option>
        }
    </select>

    <select @onchange="(e)=>SelectModel(e.Value.ToString())">
        <option value="">Choose Model</option>

        @foreach (var item in carModelsList)
        {
            <option value="@item">@item</option>
        }
    </select>

    <button @onclick="@(() => add())">Add</button>
    </EditForm>
</div>

@code {
    [Parameter]
    public EventCallback<IVehicle> OnAdd { get; set; }

    List<string> carModelsList = Extensions.GetEnumItems(typeof(CarModelsEnum));
    List<string> carColorsList = Extensions.GetEnumItems(typeof(VehicleColors));
    
    private Car c = new ();
    VehicleColors color;
    CarModel model;
    
    void SelectColor(string value)
    {
        this.color = (VehicleColors)System.Enum.Parse(typeof(VehicleColors), value);
    }

    void SelectModel(string value)
    {
        this.model = new CarModel {Name = value};
    }

    void add()
    {
        Car c = new Car(model, color);
        OnAdd.InvokeAsync(c);
    }

    void ValidSubmit()
    {
        add();
        Logger.LogInformation("ValidSubmit called");
    }
}